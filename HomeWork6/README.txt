TestSplitMain1 - проверка на раз,иение текста по примерам.

TestSplitMain2 - 1. Скачать книгу "Война и мир" https://www.dropbox.com/s/8mstiwnx9o9btw4/%D0%B2%D0%BE%D0%B9%D0%BD%D0%B0%20%D0%B8%20%D0%BC%D0%B8%D1%80_%D0%BA%D0%BD%D0%B8%D0%B3%D0%B0.txt?dl=0 на компьютер.

                 2. Работа с коллекциями:
                    2.1 Найти в тексте все использованные слова и поместить их в коллекцию Set.
                   		Более подробное описание задачи, для понимания чего я хочу: Для решения данной задачи необходимо
                   		прочитать текстовый файл и поместить текст из данного текстового файла в строку.
                   		Далее данную строку необходимо обработать таким образом чтобы из неё можно было бы считывать слова.
                   		Далее каждое полученное слово поместить в Set. Благодаря возможностям Set'ов в итоге мы получим
                   		коллекцию содержащую набор слов который был использован при написании данного текста.
                   		В конце выводим в консоль количество использованных слов.

TestSplitMain3 - 2.2 Найти в тексте топ N (настраиваемое значение) слов и вывести количество этих слов используя Map и List. Отсортировать по количеству. Распечатать в консоль.
                 		Пример: Война - 200 раз, Мир - 100 раз и так далее. Знаки препинания, пробелы и переводы строк - это не слова.
                 		Более подробное описание задачи, для понимания чего я хочу: Для решения данной задачи необходимо
                 		 прочитать текстовый файл  и поместить текст из данного текстового файла в строку.  Далее данную
                 		  строку необходимо обработать таким образом чтобы из неё можно было бы считывать слова.
                 		  Далее каждое полученное слово поместить как ключ в Map, а количество повторений в тексте
                 		  ставить как значение. Для того чтобы это работало вам необходимо постоянно проверять наличие
                 		  ключа в Map, и если нужный нам ключ уже присутсвует в нашей коллекции то мы должны увеличить
                 		  уже имеющееся значение в коллекции на еденицу. После наполнения данной коллекции мы получим
                 		  набор слов и их количество в тексте. Далее нам нужно придумать как отсортировать получившуюся
                 		  коллекцию но к сожалению непосредственно эту коллекцию отсортировать не получится, придётся
                 		  создавать для этого List и наполнять лист Entry из Map. В итоге из получившегося отсортированного
                 		  набора данных вывести первые N записей.

TestSplitMain4 - 3. Написать интерфейс ISearchEngine. Это будет интерфейс в котором будут методы:
                 	3.1 long search(String text, String word) - Метод возвращает информации о количестве раз которое встречается слово в тексте.
                 	Первый параметр текст в котором ищем, второй параметр что ищем в тексте.

TestSplitMain5 - 4. Реализовать интерфейс ISearchEngine:
                    	4.1 Написать класс EasySearch. Реализовать поиск используя метод indexOf из класса String.
                    	 В данной реализации запрещено использовать регулярные выражения в любом виде, для любых задач.
                    	 Данный класс ищет слова с учётом регистра.

TestSplitMain6 - 4.2* Написать класс RegExSearch реализующий интерфейс ISearchEngine. Реализовать поиск при помощи класса Matcher. Данный класс ищет слова с учётом регистра.

TestSplitMain  - 5. Используя реализации интерфейса ISearchEngine вывести информацию как часто встречаются слова "война", "и" (как союз), "мир" вне зависимости от регистра.