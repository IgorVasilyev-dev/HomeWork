package HomeWork1;

public class DZ1_2 {
    public static void main(String[] args) {

        int a;
        int b;
        int c;
        boolean d;
        // 2.1  5 + 2 / 8

        System.out.println(5 + 2/8); // 5
        /*
          первым выполняется действие 2/8 = 0(если в операции участвуют
          два целых числа, то результат будет округляться до целого числа), далее 5 + 0 = 5
        */

        // 2.2  (5 + 2) / 8

        System.out.println((5 + 2)/8); // 0
        /*
           первым выполняется действие в круглых скобках (5+2) = 7, далее 7/8 = 0
           (если в операции участвуют два целых числа, то результат будет округляться до целого числа)
        */

        // 2.3  (5 + 2++) / 8

        a = 2;
        System.out.println((5 + a++)/8); // 0
        /*
           сперва выполняем действие постинкримента a++ и записываем в a = 3, но возвращаем 2,
           далее происходит действие в скобках (5+2) = 7, затем деление целых чисел 7/8 = 0
         */

        // 2.4  (5 + 2++) / --8

        a = 2;
        b = 8;
        System.out.println((5 + a++)/--b); // 1
        /*
           1) выполняем действие постинкримента a++ и записываем в a = 3, но возвращаем 2
           2) происходит действие в скобках (5+2) = 7
           3) затем выполняем действие прединкримента --b и возвращаем b = 7
           4) выполняем деление 7/7 = 1
         */

        // 2.5  (5 * 2 >> 2++) / --8

        a = 2;
        b = 8;
        System.out.println((5 * 2 >> a++) / --b); // 0
        /*
           1) выполняем действие постинкримента в круглых скобках a++ и записываем в a = 3, но возвращаем 2
           2) производим действие умножения в скобках 5 * 2 = 10
           3) выполняем побитовый оператор в скобках 10 >> 2 и получаем 2
           4) выполняем действие прединкримента --b и возвращаем b = 7
           5) выполняем деление 2/7 и получаем 0
         */

        // 2.6  (5 + 7 > 20 ? 68 : 22 * 2 >> 2++) / --8

        a = 2;
        b = 8;
        System.out.println((5 + 7 > 20 ? 68 : 22 * 2 >> a++) / --b); // 1
        /*
           1) выполняем действие постинкримента в круглых скобках a++ и записываем в a = 3, но возвращаем 2
           2) выполняем действие умножения в круглых скобках 22 * 2 = 44
           3) выполняем действие сложения 5 + 7 = 12 в круглых скобках
           4) выполняем побитовый оператор в круглых скобках 44 >> 2 и получаем 11
           5) сравниваем полученый рузельтат 12 > 20 = false в круглых скобках
           6) выполняем тернарный оператор в круглых скобобках false = 11
           7) выполняем действие прединкримента --b и возвращаем b = 7
           8) выполняем деление 11/7 = 1
         */

        // 2.7  (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> 2++) / --8

        a = 2;
        b = 8;
        //System.out.println((5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> a++) / --b); // не допустимое значение if true (68>=68)
         /*
           условный оператор (?:) состоит из трех операндов: (выражение) ? значение if true : значение if false.
           В данном случаем значение if true выражается как 68>=68, и принимает логическое значение true.
           Java ожидает получить челочисленное значение
         */

        // 2.8  6 - 2 > 3 && 12 * 12 <= 119

        d = 6 - 2 > 3 && 12 * 12 <= 119;
        System.out.println(d); // false
        /*
           1) выполняем умножение 12 * 12 = 144
           2) выполняем вычитание 6 - 2 = 4
           3) выполняем сравнение 4 > 3 = true
           4) выполняем сравнение 144 <= 119 = false
           5) выполняем логические оператор  true && false = false
         */

        // 2.9  true && false

        d = true && false;
        System.out.println(d);
        /*
           1) выполняем логические оператор  true && false = false
         */

    }
}
